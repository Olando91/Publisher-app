@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@using Publisher_GUI.Components.Dialogs
@using Publisher_GUI.Data.Services.Authentication
@inject IDialogService DialogService
@inject ISnackbar snackbar
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<MudNavMenu>
    <MudPaper Square="true" Style="height:85vh;" Elevation="0">
        <MudNavLink Href="/" Match="NavLinkMatch.All">Forside</MudNavLink>
        <AuthorizeView>
            <Authorized>
                <MudNavLink Href="/admin" Match="NavLinkMatch.Prefix">Admin dashboard</MudNavLink>
            </Authorized>
        </AuthorizeView>
    </MudPaper>

    <MudPaper Square="true" Style="justify-content:center; display:flex; align-items: center;" Elevation="0">
        <AuthorizeView>
            <NotAuthorized>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick=LoginDialog Style="width:90%; height:50%;">
                    Admin login
                </MudButton>
            </NotAuthorized>
            <Authorized>
                <MudButton Variant="Variant.Filled" Color="Color.Error" @onclick=Logout Style="width:90%; height: 50%">Logout</MudButton>
            </Authorized>
        </AuthorizeView>
    </MudPaper>
</MudNavMenu>

@code {

    private async Task LoginDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        var dialog = await DialogService.ShowAsync<AdminLoginDialog>("Admin dialog", options);
        var result = await dialog.Result;

        if (!result.Canceled)
            snackbar.Add("Succes", severity: Severity.Success);
    }

    private async Task Logout()
    {
        await ((CustomAuthStateProvider)AuthStateProvider).MarkUserAsLoggedOut();
        NavigationManager.NavigateTo("/");
    }
}