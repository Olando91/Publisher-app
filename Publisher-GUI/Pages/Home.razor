@page "/"
@using MudBlazor
@using Publisher_GUI.Components.Dialogs
@using Publisher_GUI.Components.Home
@using Publisher_GUI.Data.Services
@using Publisher_GUI.Models.Author
@using global::Models.Book
@inject BookService _bookService

<MudContainer class="mt-16">
    <MudSwitch @bind-Value=@AuthorBookSwitch Label="Sort by Author/Book" LabelPlacement="Placement.Top" Color="Color.Primary" UncheckedColor="Color.Primary" />
    @if (Books.Count == 0)
    {
        <MudText>Loading...</MudText>
    }
    else
    {
        <MudGrid Class="mt-8">
            @foreach (var book in Books.Where(x => x.Cover != null))
            {
                <HomeBookDisplay Book="@book"></HomeBookDisplay>
            }
        </MudGrid>
    }
</MudContainer>

@code {
    public bool AuthorBookSwitch
    {
        get => _authorBookSwitch;
        set
        {
            _authorBookSwitch = value;
            SortAuthorsOrBooks();
        }
    }
    private bool _authorBookSwitch;
    private List<Book> Books { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Books = await _bookService.GetAllBooksNoAuth();
        SortAuthorsOrBooks();
    }

    private void SortAuthorsOrBooks()
    {
        if (AuthorBookSwitch)
        {
            Books = Books.OrderBy(b => b.Title).ToList();
        }
        else
        {
            Books = Books.OrderBy(b => b.Author.FirstName).ToList();
        }

        StateHasChanged();
    }
}